BEGIN TRANSACTION;
DROP TABLE IF EXISTS "Scheidsen";
CREATE TABLE IF NOT EXISTS "Scheidsen" (
	"SpelerID"	INTEGER NOT NULL,
	"Arbiter-Ranking"	INTEGER,
	FOREIGN KEY("SpelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("SpelerID")
);
DROP TABLE IF EXISTS "Wedstrijdleiders";
CREATE TABLE IF NOT EXISTS "Wedstrijdleiders" (
	"SpelerID"	INTEGER NOT NULL,
	FOREIGN KEY("SpelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("SpelerID")
);
DROP TABLE IF EXISTS "Adressen";
CREATE TABLE IF NOT EXISTS "Adressen" (
	"AdresID"	INTEGER NOT NULL,
	"Straatnaam"	TEXT NOT NULL,
	"Straatnummer"	INTEGER NOT NULL,
	"Postcode"	INTEGER NOT NULL CHECK(LENGTH("Postcode") = 4),
	PRIMARY KEY("AdresID")
);
DROP TABLE IF EXISTS "Tennisclubs";
CREATE TABLE IF NOT EXISTS "Tennisclubs" (
	"ClubID"	INTEGER NOT NULL,
	"Naam"	TEXT NOT NULL,
	"adres"	INTEGER NOT NULL,
	FOREIGN KEY("adres") REFERENCES "Wedstrijdleiders"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("ClubID")
);
DROP TABLE IF EXISTS "VeldSoort";
CREATE TABLE IF NOT EXISTS "VeldSoort" (
	"id"	INTEGER NOT NULL,
	"SOORT"	TEXT NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT)
);
DROP TABLE IF EXISTS "SpelersEmailadressen";
CREATE TABLE IF NOT EXISTS "SpelersEmailadressen" (
	"spelerID"	INTEGER NOT NULL COLLATE BINARY,
	"Email"	TEXT NOT NULL CHECK("EMAIL" LIKE ('_%@_%._%')) COLLATE NOCASE,
	FOREIGN KEY("spelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("spelerID","Email")
);
DROP TABLE IF EXISTS "Uitslagen";
CREATE TABLE IF NOT EXISTS "Uitslagen" (
	"UitslagID"	INTEGER NOT NULL,
	"Soort"	TEXT NOT NULL,
	PRIMARY KEY("UitslagID" AUTOINCREMENT)
);
DROP TABLE IF EXISTS "Datums";
CREATE TABLE IF NOT EXISTS "Datums" (
	"DatumID"	INTEGER NOT NULL,
	"Dag"	INTEGER NOT NULL CHECK("DAG" <= 31),
	"Maand"	INTEGER NOT NULL CHECK("MAAND" <= 12),
	"Jaar"	INTEGER NOT NULL,
	"Uur"	INTEGER CHECK("Uur" <= 23),
	"Minuten"	INTEGER CHECK("Minuten" <= 59),
	PRIMARY KEY("DatumID" AUTOINCREMENT)
);
DROP TABLE IF EXISTS "Velden";
CREATE TABLE IF NOT EXISTS "Velden" (
	"VeldID"	INTEGER NOT NULL,
	"VeldSoort"	INTEGER NOT NULL,
	"ClubID"	INTEGER NOT NULL,
	FOREIGN KEY("VeldSoort") REFERENCES "VeldSoort"("id") ON UPDATE RESTRICT ON DELETE RESTRICT,
	FOREIGN KEY("ClubID") REFERENCES "Tennisclubs"("ClubID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("VeldID")
);
DROP TABLE IF EXISTS "Finales";
CREATE TABLE IF NOT EXISTS "Finales" (
	"MatchID"	INTEGER NOT NULL,
	"Scheidsrechter"	INTEGER NOT NULL,
	FOREIGN KEY("Scheidsrechter") REFERENCES "Scheidsen"("SpelerID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("MatchID") REFERENCES "Matchen"("MatchID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("MatchID")
);
DROP TABLE IF EXISTS "Supporters";
CREATE TABLE IF NOT EXISTS "Supporters" (
	"SpelerID"	INTEGER NOT NULL,
	"ClubID"	INTEGER NOT NULL,
	FOREIGN KEY("ClubID") REFERENCES "Tennisclubs"("ClubID") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("SpelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("SpelerID")
);
DROP TABLE IF EXISTS "Spelers";
CREATE TABLE IF NOT EXISTS "Spelers" (
	"SpelerID"	INTEGER NOT NULL UNIQUE,
	"Naam"	INTEGER NOT NULL,
	"Telefoonnummer"	TEXT NOT NULL,
	"Geboortedatum"	INTEGER,
	"Gewicht"	NUMERIC,
	"Lengte"	NUMERIC,
	"Ranking"	INTEGER,
	"Geslacht"	TEXT NOT NULL CHECK("Geslacht" IN ('M', 'V', 'X')),
	"Reeks"	INTEGER NOT NULL,
	"Club"	INTEGER NOT NULL,
	FOREIGN KEY("Club") REFERENCES "Tennisclubs"("ClubID") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("Geboortedatum") REFERENCES "Datums"("DatumID"),
	PRIMARY KEY("SpelerID")
);
DROP TABLE IF EXISTS "Plaatsen";
CREATE TABLE IF NOT EXISTS "Plaatsen" (
	"PlaatsID"	INTEGER NOT NULL,
	"Plaats"	TEXT NOT NULL,
	PRIMARY KEY("PlaatsID")
);
DROP TABLE IF EXISTS "Ballenrapers";
CREATE TABLE IF NOT EXISTS "Ballenrapers" (
	"SpelerID"	INTEGER NOT NULL,
	"PlaatsID"	INTEGER NOT NULL,
	FOREIGN KEY("PlaatsID") REFERENCES "Plaatsen"("PlaatsID") ON UPDATE RESTRICT ON DELETE RESTRICT,
	FOREIGN KEY("SpelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("SpelerID")
);
DROP TABLE IF EXISTS "Supporterde";
CREATE TABLE IF NOT EXISTS "Supporterde" (
	"SupperterID"	INTEGER NOT NULL,
	"FinaleID"	INTEGER NOT NULL,
	FOREIGN KEY("SupperterID") REFERENCES "Supporters"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("FinaleID") REFERENCES "Finales"("MatchID") ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY("SupperterID","FinaleID")
);
DROP TABLE IF EXISTS "GeraapteBallen";
CREATE TABLE IF NOT EXISTS "GeraapteBallen" (
	"BallenraperID"	INTEGER NOT NULL,
	"FinaleID"	INTEGER NOT NULL,
	FOREIGN KEY("BallenraperID") REFERENCES "Ballenrapers"("SpelerID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("FinaleID") REFERENCES "Finales"("MatchID") ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY("BallenraperID","FinaleID")
);
DROP TABLE IF EXISTS "Toernooien";
CREATE TABLE IF NOT EXISTS "Toernooien" (
	"ToornooiID"	INTEGER NOT NULL,
	"DatumID"	INTEGER NOT NULL,
	"ClubID"	INTEGER NOT NULL,
	FOREIGN KEY("ClubID") REFERENCES "Tennisclubs"("ClubID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("DatumID") REFERENCES "Datums"("DatumID") ON UPDATE RESTRICT ON DELETE RESTRICT,
	PRIMARY KEY("ToornooiID")
);
DROP TABLE IF EXISTS "Matchen";
CREATE TABLE IF NOT EXISTS "Matchen" (
	"MatchID"	INTEGER NOT NULL,
	"Uitslag"	INTEGER NOT NULL,
	"ScoreUit"	INTEGER NOT NULL,
	"ScoreThuis"	INTEGER NOT NULL,
	"Datum"	INTEGER NOT NULL,
	"Wedstrijdleider"	INTEGER NOT NULL,
	"Veld"	INTEGER NOT NULL,
	"ToernooiID"	INTEGER NOT NULL,
	FOREIGN KEY("Veld") REFERENCES "Velden"("VeldID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("Uitslag") REFERENCES "Uitslagen"("UitslagID") ON UPDATE RESTRICT ON DELETE RESTRICT,
	FOREIGN KEY("Wedstrijdleider") REFERENCES "Wedstrijdleiders"("SpelerID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("Datum") REFERENCES "Datums"("DatumID") ON UPDATE RESTRICT ON DELETE RESTRICT,
	FOREIGN KEY("ToernooiID") REFERENCES "Toernooien"("ToornooiID") ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY("MatchID")
);
DROP TABLE IF EXISTS "Reeksen";
CREATE TABLE IF NOT EXISTS "Reeksen" (
	"ReeksID"	INTEGER NOT NULL,
	PRIMARY KEY("ReeksID")
);
DROP TABLE IF EXISTS "ToernooienReeksen";
CREATE TABLE IF NOT EXISTS "ToernooienReeksen" (
	"ToernooiID"	INTEGER NOT NULL,
	"ReeksID"	INTEGER NOT NULL,
	FOREIGN KEY("ToernooiID") REFERENCES "Toernooien"("ToornooiID") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY("ReeksID") REFERENCES "Reeksen"("ReeksID") ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY("ReeksID","ToernooiID")
);
DROP TABLE IF EXISTS "Deelnamen";
CREATE TABLE IF NOT EXISTS "Deelnamen" (
	"DeelnameID"	INTEGER NOT NULL,
	"SpelerID"	INTEGER NOT NULL,
	"MatchID"	INTEGER NOT NULL,
	"Vraag"	TEXT,
	FOREIGN KEY("SpelerID") REFERENCES "Spelers"("SpelerID") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("MatchID") REFERENCES "Matchen"("MatchID") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY("DeelnameID" AUTOINCREMENT)
);
COMMIT;
